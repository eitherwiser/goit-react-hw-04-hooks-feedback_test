{"version":3,"sources":["components/statistics/Statistics.module.css","components/feedback/FeedbackOptions.module.css","components/section/Section.jsx","components/statistics/Statistics.jsx","components/feedback/FeedbackOptions.jsx","components/notification/Notification.jsx","App.js","index.js"],"names":["module","exports","Section","title","children","className","s","container","Statistics","feedbacks","total","good","neutral","bad","positiveFeedbackPercentage","Math","round","textColor","list","style","color","FeedbackOptions","options","onChange","feedbackList","Object","getOwnPropertyNames","map","key","btn","type","name","onClick","toUpperCase","Notification","message","App","useState","state","setState","countTotalFeedbacks","values","reduce","acc","value","e","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qJACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,yBAAyB,QAAU,4BAA4B,IAAM,0B,qCCA9HD,EAAOC,QAAU,CAAC,aAAe,sCAAsC,IAAM,+B,+KCE9D,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACI,sBAAKC,UAAWC,IAAEC,UAAlB,UACE,oBAAIF,UAAWC,IAAEH,MAAjB,SAAyBA,IACxBC,K,oBCHM,SAASI,EAAT,GAAyC,IAApBC,EAAmB,EAAnBA,UAAWC,EAAQ,EAARA,MAErCC,EAAuBF,EAAvBE,KAAMC,EAAiBH,EAAjBG,QAASC,EAAQJ,EAARI,IAEjBC,EAA6B,WACjC,OAAOC,KAAKC,MAAOL,EAAOD,EAAS,MAG7BO,EAAS,qBACb,IAAMH,IADO,kBAEbA,IAA+B,GAFlB,2BAIXF,EAAUF,EAAS,IAAO,GAC1B,GACIE,EAAUF,EAAS,IAAO,GAC5B,EAAME,EAAUF,EAAS,IAAO,IAC9B,EARO,KAWjB,OAEE,qCACA,qBAAIL,UAAWC,IAAEY,KAAjB,UACI,qBAAIb,UAAWC,IAAEK,KAAjB,UACE,iCACKA,EADL,IACY,OAEZ,sBAAMN,UAAU,iBAAhB,oCAKF,qBAAIA,UAAWC,IAAEM,QAAjB,UACE,iCACKA,EADL,IACe,OAEf,sBAAMP,UAAU,iBAAhB,kCAMF,qBAAIA,UAAWC,IAAEO,IAAjB,UACE,iCACGA,EADH,IACS,OAET,sBAAMR,UAAU,iBAAhB,0CAOFM,IAASD,EACL,oBAAGS,MAAO,CAACC,MAAOH,GAAlB,UAA8B,iCAAOH,IAAP,OAA9B,gBACS,IAATH,EACE,mBAAGQ,MAAO,CAACC,MAAOH,GAAlB,oDACA,oBAAGE,MAAO,CAACC,MAAOH,GAAlB,UAA+B,iCAAOH,IAAP,OAA/B,oCAA4G,+BAAOJ,IAAnH,U,oBCzDC,SAASW,EAAT,GAAiD,IAAtBC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,SAEjD,OACE,oBAAIlB,UAAWC,IAAEkB,aAAjB,SACGC,OAAOC,oBAAoBJ,GAASK,KAAI,SAAAC,GAAG,OACtC,6BACE,wBAAQvB,UAAWC,IAAEuB,IACnBC,KAAK,SACLC,KAAMH,EACNI,QAAST,EAHX,SAKGK,EAAIK,iBANAL,QCNN,SAASM,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,+BAAOA,ICID,SAASC,IAAO,IAAD,EAEFC,mBAAS,CACjC1B,KAAM,EACNC,QAAS,EACTC,IAAK,IALqB,mBAErByB,EAFqB,KAEdC,EAFc,KAetBC,EAAsB,WAC1B,OAAOf,OAAOgB,OAAOH,GAAOI,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,IAAO,IAIlE,OACE,qCACE,cAAC1C,EAAD,CAASC,MAAM,wBAAwBE,UAAU,WAAjD,SACE,cAACgB,EAAD,CACEC,QAASgB,EACTf,SAjBS,SAACsB,GAChB,IAAIf,EAAOe,EAAEC,OAAOf,KACpBQ,EAAS,2BACJD,GADG,kBACKR,EAAOQ,EAAMR,GAAQ,UAiBhC,cAAC5B,EAAD,CAASC,MAAM,aAAf,SACGqC,IAAwB,EACvB,mCACE,6BACE,cAAChC,EAAD,CACEC,UAAW6B,EACX5B,MAAO8B,UAKb,cAACN,EAAD,CAAcC,QAAQ,0CCzChCY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a4f05fc0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__3HfUr\",\"good\":\"Statistics_good__-ev8s\",\"neutral\":\"Statistics_neutral__2AL5a\",\"bad\":\"Statistics_bad__1E75I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackList\":\"FeedbackOptions_feedbackList__3KoPy\",\"btn\":\"FeedbackOptions_btn__1MmTt\"};","import s from './Section.module.css';\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Section ({title, children }) {\r\n  return (\r\n      <div className={s.container}>\r\n        <h2 className={s.title}>{title}</h2>\r\n        {children}\r\n      </div>\r\n  )  \r\n}\r\n\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.object.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Statistics.module.css\";\r\n\r\nexport default function Statistics({feedbacks, total}) {\r\n  \r\n  const { good, neutral, bad } = feedbacks;\r\n\r\n  const positiveFeedbackPercentage = () => {\r\n    return Math.round((good / total) * 100);\r\n  }\r\n  \r\n    const textColor = `rgba(\r\n    ${200 - positiveFeedbackPercentage()},\r\n    ${positiveFeedbackPercentage() + 50},\r\n    50,\r\n    ${((neutral / total) * 100) > 60\r\n      ? 0.4\r\n        : ((neutral / total) * 100) > 10\r\n        ? 1 - ((neutral / total) * 100) * 0.01\r\n          : 1\r\n    })`;\r\n  \r\n  return (\r\n\r\n    <>\r\n    <ul className={s.list}>\r\n        <li className={s.good}>\r\n          <span>\r\n              {good} {\" \"}\r\n          </span>\r\n          <span className=\"material-icons\">\r\n          sentiment_satisfied \r\n          </span>\r\n      </li>\r\n\r\n        <li className={s.neutral}>\r\n          <span>\r\n              {neutral} {\" \"}\r\n          </span>\r\n          <span className=\"material-icons\">\r\n            sentiment_neutral \r\n          </span>\r\n\r\n      </li>\r\n\r\n        <li className={s.bad}>\r\n          <span>\r\n            {bad} {\" \"}\r\n          </span>\r\n          <span className=\"material-icons\">\r\n            sentiment_dissatisfied \r\n          </span>\r\n      </li>\r\n\r\n      </ul>\r\n      {\r\n        good === total\r\n          ? <p style={{color: textColor}}><span>{positiveFeedbackPercentage()}%</span> positive!</p>\r\n          : good === 0\r\n            ? <p style={{color: textColor}} > There are no positive feedbacks here.</p>\r\n            : <p style={{color: textColor}} ><span>{positiveFeedbackPercentage()}%</span> feedbacks are positive of total <span>{total}</span>.</p>\r\n      }\r\n      </>\r\n  );\r\n\r\n}\r\n\r\nStatistics.propTypes = {\r\n  feedbacks: PropTypes.object.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from \"./FeedbackOptions.module.css\"\r\n\r\nexport default function FeedbackOptions({ options, onChange }) {\r\n\r\n  return (\r\n    <ul className={s.feedbackList}>\r\n      {Object.getOwnPropertyNames(options).map(key => ( \r\n            <li key={key}>\r\n              <button className={s.btn}\r\n                type=\"button\"\r\n                name={key}\r\n                onClick={onChange}\r\n                >\r\n                {key.toUpperCase()}\r\n              </button>\r\n            </li>\r\n      ))}\r\n    </ul>\r\n  )\r\n}\r\n\r\n\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.object,\r\n  onChange: PropTypes.func,\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Notification({ message }) {\r\n  return <span>{message}</span>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};","import './App.css';\r\nimport React from 'react';\r\nimport { useState } from 'react';\r\nimport Section from \"./components/section/Section\";\r\nimport Statistics from \"./components/statistics/Statistics\";\r\nimport FeedbackOptions from \"./components/feedback/FeedbackOptions\";\r\nimport Notification from \"./components/notification/Notification\";\r\n\r\nexport default function App() {\r\n\r\n  const [state, setState] = useState({\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  })\r\n\r\n  const onChange = (e) => {\r\n    let type = e.target.name\r\n    setState({\r\n      ...state, [type]: state[type] + 1\r\n    })\r\n  }\r\n\r\n  const countTotalFeedbacks = () => {\r\n    return Object.values(state).reduce((acc, value) => acc + value, 0);\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <Section title=\"Please leave feedback\" className=\"feedback\">\r\n        <FeedbackOptions\r\n          options={state}\r\n          onChange={onChange}\r\n        />\r\n      </Section>\r\n      <Section title=\"Statistics\">\r\n        {countTotalFeedbacks() > 0 ? (\r\n          <>\r\n            <ul>\r\n              <Statistics\r\n                feedbacks={state}\r\n                total={countTotalFeedbacks()}\r\n              />\r\n            </ul>\r\n          </>\r\n        ) : (\r\n          <Notification message=\"There are no feedbacks here yet.\" />\r\n        )}\r\n      </Section>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}